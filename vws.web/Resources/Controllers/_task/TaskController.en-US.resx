<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Check list item title can not have more than 500 characters." xml:space="preserve">
    <value>Check list item title can not have more than 500 characters.</value>
  </data>
  <data name="Check list item with given id does not exist." xml:space="preserve">
    <value>Check list item with given id does not exist.</value>
  </data>
  <data name="Check list title can not have more than 250 characters." xml:space="preserve">
    <value>Check list title can not have more than 250 characters.</value>
  </data>
  <data name="Check list with given id does not exist." xml:space="preserve">
    <value>Check list with given id does not exist.</value>
  </data>
  <data name="Comment body can not be emty or have more than 1000 characters." xml:space="preserve">
    <value>Comment body can not be emty or have more than 1000 characters.</value>
  </data>
  <data name="File size is not allowed." xml:space="preserve">
    <value>File size is not allowed.</value>
  </data>
  <data name="High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="Invalid status." xml:space="preserve">
    <value>Invalid status.</value>
  </data>
  <data name="Invalid tags." xml:space="preserve">
    <value>Invalid tags.</value>
  </data>
  <data name="Length of color is more than 6 characters." xml:space="preserve">
    <value>Length of color is more than 6 characters.</value>
  </data>
  <data name="Length of description is more than 2000 characters." xml:space="preserve">
    <value>Length of description is more than 2000 characters.</value>
  </data>
  <data name="Length of title is more than 100 characters." xml:space="preserve">
    <value>Length of title is more than 100 characters.</value>
  </data>
  <data name="Length of title is more than 500 characters." xml:space="preserve">
    <value>Length of title is more than 500 characters.</value>
  </data>
  <data name="Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="No Time" xml:space="preserve">
    <value>No Time</value>
  </data>
  <data name="Personal" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="Priority id is not defined." xml:space="preserve">
    <value>Priority id is not defined.</value>
  </data>
  <data name="Project not found." xml:space="preserve">
    <value>Project not found.</value>
  </data>
  <data name="Some of users you want to add do not have access to team or project." xml:space="preserve">
    <value>Some of users you want to add do not have access to team or project.</value>
  </data>
  <data name="Start Date should be before End Date." xml:space="preserve">
    <value>Start Date should be before End Date.</value>
  </data>
  <data name="Status not found." xml:space="preserve">
    <value>Status not found.</value>
  </data>
  <data name="Task already has the tag." xml:space="preserve">
    <value>Task already has the tag.</value>
  </data>
  <data name="Task comment access denied." xml:space="preserve">
    <value>Task comment access denied.</value>
  </data>
  <data name="Task comment not found." xml:space="preserve">
    <value>Task comment not found.</value>
  </data>
  <data name="Task does not exist." xml:space="preserve">
    <value>Task does not exist.</value>
  </data>
  <data name="Task does not have the tag." xml:space="preserve">
    <value>Task does not have the tag.</value>
  </data>
  <data name="Task is assigned to user before." xml:space="preserve">
    <value>Task is assigned to user before.</value>
  </data>
  <data name="Task {0} created by {1}." xml:space="preserve">
    <value>Task {0} created by {1}.</value>
  </data>
  <data name="Team not found." xml:space="preserve">
    <value>Team not found.</value>
  </data>
  <data name="There is no attachment with such information for given comment." xml:space="preserve">
    <value>There is no attachment with such information for given comment.</value>
  </data>
  <data name="There is no attachment with such information for given task." xml:space="preserve">
    <value>There is no attachment with such information for given task.</value>
  </data>
  <data name="There is no status to give task." xml:space="preserve">
    <value>There is no status to give task.</value>
  </data>
  <data name="Title can not be empty or with more than 500 characters." xml:space="preserve">
    <value>Title can not be empty or with more than 500 characters.</value>
  </data>
  <data name="User does not exist." xml:space="preserve">
    <value>User does not exist.</value>
  </data>
  <data name="User you selected does not have access to task already." xml:space="preserve">
    <value>User you selected does not have access to task already.</value>
  </data>
  <data name="You can not delete status which has task." xml:space="preserve">
    <value>You can not delete status which has task.</value>
  </data>
  <data name="You can not edit and delete comment before 5 minutes of your last change." xml:space="preserve">
    <value>You can not edit and delete comment before 5 minutes of your last change.</value>
  </data>
  <data name="You can not provide both project id and team id." xml:space="preserve">
    <value>You can not provide both project id and team id.</value>
  </data>
  <data name="You do not have access to project." xml:space="preserve">
    <value>You do not have access to project.</value>
  </data>
  <data name="You do not have access to task status." xml:space="preserve">
    <value>You do not have access to task status.</value>
  </data>
  <data name="You do not have access to task tag." xml:space="preserve">
    <value>You do not have access to task tag.</value>
  </data>
  <data name="You do not have access to team." xml:space="preserve">
    <value>You do not have access to team.</value>
  </data>
  <data name="You do not have access to this check list." xml:space="preserve">
    <value>You don not have access to this check list.</value>
  </data>
  <data name="You don't have access to this task." xml:space="preserve">
    <value>You don't have access to this task.</value>
  </data>
</root>